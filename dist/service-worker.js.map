{"version":3,"sources":["service-worker.js"],"names":["staticAssets","self","addEventListener","e","prompt","userChoice","then","result","outcome","console","log","waitUntil","caches","open","cache","addAll","clients","claim","url","URL","request","respondWith","match","resp","fetch"],"mappings":"AAAA,IAAMA,YAAY,GAAG,CACjB,YADiB,EAEjB,cAFiB,EAGjB,gBAHiB,EAIjB,wBAJiB,EAKjB,cALiB,CAArB;AAQAC,IAAI,CAACC,gBAAL,CAAsB,qBAAtB,EAA6C,UAAAC,CAAC,EAAI;AAC9CC,EAAAA,MAAM,CAAC,qCAAD,CAAN;AACAD,EAAAA,CAAC,CAACE,UAAF,CAAaC,IAAb,CAAkB,UAAAC,MAAM,EAAI;AACxB,QAAGA,MAAM,CAACC,OAAP,KAAmB,UAAtB,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACJ,GAJD;AAKH,CAPD;AAQAT,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,CAAC,EAAI;AAClCM,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAP,EAAAA,CAAC,CAACQ,SAAF,CACIC,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAAgCP,IAAhC,CAAqC,UAAAQ,KAAK,EAAI;AAC1CA,IAAAA,KAAK,CAACC,MAAN,CAAaf,YAAb;AACH,GAFD,CADJ,EAFkC,CAOlC;AACH,CARD;AASAC,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAAAC,CAAC,EAAI;AACnCM,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAT,EAAAA,IAAI,CAACe,OAAL,CAAaC,KAAb;AACH,CAHD;AAIAhB,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,CAAC,EAAI;AAChC,MAAMe,GAAG,GAAG,IAAIC,GAAJ,CAAQhB,CAAC,CAACiB,OAAF,CAAUF,GAAlB,CAAZ;AACAf,EAAAA,CAAC,CAACkB,WAAF,CAAcT,MAAM,CAACU,KAAP,CAAanB,CAAC,CAACiB,OAAf,EAAwBd,IAAxB,CAA6B,UAAAiB,IAAI;AAAA,WAAIA,IAAI,GAAGA,IAAH,GAAUC,KAAK,CAACN,GAAD,CAAvB;AAAA,GAAjC,CAAd;AACH,CAHD","file":"service-worker.js","sourceRoot":"../src","sourcesContent":["const staticAssets = [\n    './index.js',\n    './index.html',\n    './portfolio.js',\n    './manifest.webmanifest',\n    './src/*/*.js'\n]\n\nself.addEventListener('beforeinstallprompt', e => {\n    prompt('Install Noteworthy onto your phone!');\n    e.userChoice.then(result => {\n        if(result.outcome === 'accepted') {\n            console.log('Accepted!');\n        }\n    })\n});\nself.addEventListener('install', e => {\n    console.log('Service worker installed!');\n    e.waitUntil(\n        caches.open('noteworthy-cache').then(cache => {\n            cache.addAll(staticAssets);\n        })\n    );\n    // self.skipWaiting();\n});\nself.addEventListener('activate', e => {\n    console.log('Service worker activated!');\n    self.clients.claim();\n});\nself.addEventListener('fetch', e => {\n    const url = new URL(e.request.url);\n    e.respondWith(caches.match(e.request).then(resp => resp ? resp : fetch(url)));\n});"]}