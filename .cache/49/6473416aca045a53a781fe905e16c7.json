{"id":"../../../../../node_modules/firebase/storage/implementation/promise_external.js","dependencies":[{"name":"/Users/adeolauthman/node_modules/firebase/storage/implementation/promise_external.js.map","includedInParent":true,"mtime":1494998757000},{"name":"/Users/adeolauthman/Documents/AdeolasCodingStuff/WebDevelopment/Noteworthy/package.json","includedInParent":true,"mtime":1549253646323},{"name":"/Users/adeolauthman/Documents/AdeolasCodingStuff/WebDevelopment/Noteworthy/.babelrc","includedInParent":true,"mtime":1549225258658},{"name":"/Users/adeolauthman/node_modules/firebase/package.json","includedInParent":true,"mtime":1495915167000},{"name":"../../app/shared_promise","loc":{"line":14,"column":30},"parent":"/Users/adeolauthman/node_modules/firebase/storage/implementation/promise_external.js","resolved":"/Users/adeolauthman/node_modules/firebase/app/shared_promise.js"}],"generated":{"js":"/*! @license Firebase v4.0.0\nBuild: rev-c054dab\nTerms: https://firebase.google.com/terms/ */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.make = make;\nexports.resolve = resolve;\nexports.reject = reject;\n\nvar _shared_promise = require(\"../../app/shared_promise\");\n\nfunction make(resolver) {\n  return new _shared_promise.local.Promise(resolver);\n}\n/**\n * @template T\n */\n/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n * @fileoverview Implements the promise abstraction interface for external\n * (public SDK) packaging, which just passes through to the firebase-app impl.\n */\n/**\n * @template T\n * @param {function((function(T): void),\n *                  (function(!Error): void))} resolver\n */\nfunction resolve(value) {\n  return _shared_promise.local.Promise.resolve(value);\n}\nfunction reject(error) {\n  return _shared_promise.local.Promise.reject(error);\n}\n\n","map":{"version":3,"sources":["src/storage/implementation/promise_external.ts"],"names":["make","resolve","reject","resolver","Promise","value","error"],"mappings":";;;;;QA6BMA,I,GAAAA,I;QAQAC,O,GAAAA,O;QAIAC,M,GAAAA,M;;AAdN;;AAEM,SAAAF,IAAA,CAAkBG,QAAlB,EACkD;AACtD,SAAO,IAAI,sBAAMC,OAAV,CAAkBD,QAAlB,CAAP;AACD;AAED;;;AAlCA;;;;;;;;;;;;;;;AAgBA;;;;AAKA;;;;;AAgBM,SAAAF,OAAA,CAAqBI,KAArB,EAA6B;AACjC,SAAQ,sBAAMD,OAAN,CAAcH,OAAd,CAAsBI,KAAtB,CAAR;AACD;AAEK,SAAAH,MAAA,CAAoBI,KAApB,EAAgC;AACpC,SAAQ,sBAAMF,OAAN,CAAcF,MAAd,CAAqBI,KAArB,CAAR;AACD","file":"promise_external.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/**\n * @fileoverview Implements the promise abstraction interface for external\n * (public SDK) packaging, which just passes through to the firebase-app impl.\n */\n\n/**\n * @template T\n * @param {function((function(T): void),\n *                  (function(!Error): void))} resolver\n */\n\nimport { local } from \"../../app/shared_promise\";\n\nexport function make<T>(resolver: (p1: (p1: T) => void, \n                        p2: (p1: Error) => void) => void): Promise<T> {\n  return new local.Promise(resolver);\n}\n\n/**\n * @template T\n */\nexport function resolve<T>(value: T): Promise<T> {\n  return (local.Promise.resolve(value) as Promise<T>);\n}\n\nexport function reject<T>(error: Error): Promise<T> {\n  return (local.Promise.reject(error) as Promise<T>);\n}\n"]}},"hash":"c3cfac7cde69dd696249a782e1de7efb","cacheData":{"env":{}}}