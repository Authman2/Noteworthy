{"id":"../../../../../node_modules/firebase/storage.js","dependencies":[{"name":"/Users/adeolauthman/node_modules/firebase/storage.js.map","includedInParent":true,"mtime":1494998752000},{"name":"/Users/adeolauthman/Documents/AdeolasCodingStuff/WebDevelopment/Noteworthy/package.json","includedInParent":true,"mtime":1549253646323},{"name":"/Users/adeolauthman/Documents/AdeolasCodingStuff/WebDevelopment/Noteworthy/.babelrc","includedInParent":true,"mtime":1549225258658},{"name":"/Users/adeolauthman/node_modules/firebase/package.json","includedInParent":true,"mtime":1495915167000},{"name":"./storage/implementation/string","loc":{"line":12,"column":22},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/storage/implementation/string.js"},{"name":"./storage/implementation/taskenums","loc":{"line":14,"column":25},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/storage/implementation/taskenums.js"},{"name":"./storage/implementation/xhriopool","loc":{"line":16,"column":25},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/storage/implementation/xhriopool.js"},{"name":"./storage/reference","loc":{"line":18,"column":25},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/storage/reference.js"},{"name":"./storage/service","loc":{"line":20,"column":23},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/storage/service.js"},{"name":"./app","loc":{"line":22,"column":19},"parent":"/Users/adeolauthman/node_modules/firebase/storage.js","resolved":"/Users/adeolauthman/node_modules/firebase/app.js"}],"generated":{"js":"/*! @license Firebase v4.0.0\nBuild: rev-c054dab\nTerms: https://firebase.google.com/terms/ */\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.registerStorage = registerStorage;\n\nvar _string = require('./storage/implementation/string');\n\nvar _taskenums = require('./storage/implementation/taskenums');\n\nvar _xhriopool = require('./storage/implementation/xhriopool');\n\nvar _reference = require('./storage/reference');\n\nvar _service = require('./storage/service');\n\nvar _app = require('./app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Type constant for Firebase Storage.\n */\nvar STORAGE_TYPE = 'storage'; /**\n                              * Copyright 2017 Google Inc.\n                              *\n                              * Licensed under the Apache License, Version 2.0 (the \"License\");\n                              * you may not use this file except in compliance with the License.\n                              * You may obtain a copy of the License at\n                              *\n                              *   http://www.apache.org/licenses/LICENSE-2.0\n                              *\n                              * Unless required by applicable law or agreed to in writing, software\n                              * distributed under the License is distributed on an \"AS IS\" BASIS,\n                              * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                              * See the License for the specific language governing permissions and\n                              * limitations under the License.\n                              */\n\nfunction factory(app, unused, opt_url) {\n    return new _service.Service(app, new _xhriopool.XhrIoPool(), opt_url);\n}\nfunction registerStorage(instance) {\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, {\n        // no-inline\n        'TaskState': _taskenums.TaskState,\n        'TaskEvent': _taskenums.TaskEvent,\n        'StringFormat': _string.StringFormat,\n        'Storage': _service.Service,\n        'Reference': _reference.Reference\n    }, undefined,\n    // Allow multiple storage instances per app.\n    true);\n}\nregisterStorage(_app2.default);\n\n","map":{"version":3,"sources":["../../src/storage.ts"],"names":["registerStorage","STORAGE_TYPE","factory","app","unused","opt_url","instance","INTERNAL","registerService","undefined"],"mappings":";;;;;QAmCMA,e,GAAAA,e;;AApBN;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;AAKA;;;AAGA,IAAMC,eAAe,SAArB,C,CA7BA;;;;;;;;;;;;;;;;AA+BA,SAAAC,OAAA,CAAiBC,GAAjB,EAAmCC,MAAnC,EAAgDC,OAAhD,EAAgE;AAC9D,WAAO,qBAAYF,GAAZ,EAAiB,0BAAjB,EAAkCE,OAAlC,CAAP;AACD;AAEK,SAAAL,eAAA,CAA0BM,QAA1B,EAAkC;AAStCA,aAASC,QAAT,CAAkBC,eAAlB,CACIP,YADJ,EAEKC,OAFL,EARuB;AACrB;AACA,yCAFqB;AAGrB,yCAHqB;AAIrB,4CAJqB;AAKrB,mCALqB;AAMrB;AANqB,KAQvB,EAIIO,SAJJ;AAKI;AACA,QANJ;AAOD;AAEDT","file":"storage.js","sourcesContent":["/**\n* Copyright 2017 Google Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nimport {StringFormat} from './storage/implementation/string';\nimport {TaskEvent} from './storage/implementation/taskenums';\nimport {TaskState} from './storage/implementation/taskenums';\nimport {XhrIoPool} from './storage/implementation/xhriopool';\nimport {Reference} from './storage/reference';\nimport {Service} from './storage/service';\nimport firebase from './app';\nimport { \n  FirebaseApp, \n  FirebaseServiceFactory \n} from \"./app/firebase_app\";\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(app: FirebaseApp, unused: any, opt_url?: string): Service {\n  return new Service(app, new XhrIoPool(), opt_url);\n}\n\nexport function registerStorage(instance) {\n  let namespaceExports = {\n    // no-inline\n    'TaskState': TaskState,\n    'TaskEvent': TaskEvent,\n    'StringFormat': StringFormat,\n    'Storage': Service,\n    'Reference': Reference\n  };\n  instance.INTERNAL.registerService(\n      STORAGE_TYPE, \n      (factory as FirebaseServiceFactory),\n      namespaceExports, \n      undefined,\n      // Allow multiple storage instances per app.\n      true);\n}\n\nregisterStorage(firebase);\n"]}},"hash":"d62c4d9ed3da77e433085366e3eaac97","cacheData":{"env":{}}}